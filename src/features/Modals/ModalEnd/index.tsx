import ButtonModalClose from 'src/components/ButtonModalClose'
import DefaultButton from 'src/components/DefaultButton'

import {
  Container,
  FormContainer,
  InfoEndList,
} from 'src/features/Modals/ModalEnd/styles'
import type { ModalEndProps } from 'src/features/Modals/ModalEnd/types'
import { useModalEnd } from 'src/features/Modals/ModalEnd/useModalEnd'
import SettingsModalsLayout from 'src/features/Modals/SettingsModalsLayout'

const ModalEnd = ({
  isOpen,
  closeModal,
  handleContainerClick,
}: ModalEndProps): JSX.Element => {
  const { isBought, isLoading, mutate } = useModalEnd()

  return (
    <SettingsModalsLayout
      isOpen={isOpen}
      closeModal={closeModal}
      style={{ backgroundColor: 'rgba(0, 0, 0, 0.92)' }}
    >
      <ButtonModalClose onClose={closeModal} />
      <Container onClick={handleContainerClick} />
      <FormContainer>
        <InfoEndList>
          <li style={{ color: 'rgb(220, 20, 220)' }}>
            1 –≤–µ—Ä–µ—Å–Ω—è (–Ω–µ–¥—ñ–ª—è) –±—É–¥–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –µ–Ω–¥—É –¥–æ 16–∫ –Ω–∞ 16–∫.
          </li>
          <li>
            –ù–∞—Ä–∞–∑—ñ –µ–Ω–¥ 8–∫ –Ω–∞ 8–∫. –ü—Ä–∏–±–ª–∏–∑–Ω–æ –º–æ–∂–Ω–∞ –±—É–¥–µ –∑–∞–ª—É—Ç–∞—Ç–∏ –±—ñ–ª—è 5-6 —à–∞–ª–∫–µ—Ä—ñ–≤
            –µ–ª—ñ—Ç—Ä.
          </li>

          <li>
            –ê–ª–µ, –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –µ–Ω–¥—É, 1 –≥–æ–¥–∏–Ω—É –Ω–µ–º–æ–∂–Ω–∞ –±—É–¥–µ –ø–æ–ø–∞—Å—Ç–∏ –≤ –µ–Ω–¥
            –≥—Ä–∞–≤—Ü—è–º —è–∫—ñ <span style={{ color: 'rgb(220 40 40)' }}>–ù–ï</span> –æ–ø–ª–∞—Ç—è—Ç—å
            –¥–æ—Å—Ç—É–ø –≤ –ï–Ω–¥.
          </li>

          <li>–ü–æ—Ç—Ä—ñ–±–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç–∏ 2 —Å—Ç–∞–∫–∏ –¥—ñ–∞–º–∞–Ω—Ç–æ–≤–æ—ó —Ä—É–¥–∏ üíé</li>
        </InfoEndList>

        <DefaultButton
          style={{ width: 300, margin: '20px auto 0px auto' }}
          isLoading={isLoading}
          disabled={Boolean(isBought || isLoading)}
          onClick={() => mutate()}
        >
          {isBought ? '–í–∏ —É–∂–µ –ø—Ä–∏–¥–±–∞–ª–∏ –¥–æ—Å—Ç—É–ø' : '–ö—É–ø–∏—Ç–∏ –¥–æ—Å—Ç—É–ø'}
        </DefaultButton>
      </FormContainer>
    </SettingsModalsLayout>
  )
}

export default ModalEnd
